/* tslint:disable */
/* eslint-disable */
/**
 * API
 * The API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TaskModel
 */
export interface TaskModel {
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    uuid?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskModel
     */
    rank: number;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    taskId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    team?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    epicId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    taskType?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    priority?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskModel
     */
    plannedPersonDay?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    plannedStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    plannedEndDate?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskModel
     */
    actualPersonDay?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    actualStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    actualEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    assigneeId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    reporterId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    blockedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskModel
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the TaskModel interface.
 */
export function instanceOfTaskModel(value: object): value is TaskModel {
    if (!('rank' in value) || value['rank'] === undefined) return false;
    return true;
}

export function TaskModelFromJSON(json: any): TaskModel {
    return TaskModelFromJSONTyped(json, false);
}

export function TaskModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskModel {
    if (json == null) {
        return json;
    }
    return {
        
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'rank': json['rank'],
        'taskId': json['taskId'] == null ? undefined : json['taskId'],
        'team': json['team'] == null ? undefined : json['team'],
        'epicId': json['epicId'] == null ? undefined : json['epicId'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'taskType': json['taskType'] == null ? undefined : json['taskType'],
        'status': json['status'] == null ? undefined : json['status'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'plannedPersonDay': json['plannedPersonDay'] == null ? undefined : json['plannedPersonDay'],
        'plannedStartDate': json['plannedStartDate'] == null ? undefined : json['plannedStartDate'],
        'plannedEndDate': json['plannedEndDate'] == null ? undefined : json['plannedEndDate'],
        'actualPersonDay': json['actualPersonDay'] == null ? undefined : json['actualPersonDay'],
        'actualStartDate': json['actualStartDate'] == null ? undefined : json['actualStartDate'],
        'actualEndDate': json['actualEndDate'] == null ? undefined : json['actualEndDate'],
        'assigneeId': json['assigneeId'] == null ? undefined : json['assigneeId'],
        'reporterId': json['reporterId'] == null ? undefined : json['reporterId'],
        'description': json['description'] == null ? undefined : json['description'],
        'blockedBy': json['blockedBy'] == null ? undefined : json['blockedBy'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
    };
}

export function TaskModelToJSON(json: any): TaskModel {
    return TaskModelToJSONTyped(json, false);
}

export function TaskModelToJSONTyped(value?: TaskModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'uuid': value['uuid'],
        'rank': value['rank'],
        'taskId': value['taskId'],
        'team': value['team'],
        'epicId': value['epicId'],
        'name': value['name'],
        'type': value['type'],
        'taskType': value['taskType'],
        'status': value['status'],
        'priority': value['priority'],
        'plannedPersonDay': value['plannedPersonDay'],
        'plannedStartDate': value['plannedStartDate'],
        'plannedEndDate': value['plannedEndDate'],
        'actualPersonDay': value['actualPersonDay'],
        'actualStartDate': value['actualStartDate'],
        'actualEndDate': value['actualEndDate'],
        'assigneeId': value['assigneeId'],
        'reporterId': value['reporterId'],
        'description': value['description'],
        'blockedBy': value['blockedBy'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

