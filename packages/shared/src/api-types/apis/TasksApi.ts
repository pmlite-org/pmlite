/* tslint:disable */
/* eslint-disable */
/**
 * API
 * The API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BulkUpsertTasksModel,
  TaskModel,
} from '../models/index';
import {
    BulkUpsertTasksModelFromJSON,
    BulkUpsertTasksModelToJSON,
    TaskModelFromJSON,
    TaskModelToJSON,
} from '../models/index';

export interface BulkDeleteTasksRequest {
    requestBody: Array<string>;
}

export interface BulkUpsertTasksRequest {
    bulkUpsertTasksModel: BulkUpsertTasksModel;
}

/**
 * 
 */
export class TasksApi extends runtime.BaseAPI {

    /**
     * Bulk delete tasks
     */
    async bulkDeleteTasksRaw(requestParameters: BulkDeleteTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['requestBody'] == null) {
            throw new runtime.RequiredError(
                'requestBody',
                'Required parameter "requestBody" was null or undefined when calling bulkDeleteTasks().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/tasks/bulk-delete`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['requestBody'],
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Bulk delete tasks
     */
    async bulkDeleteTasks(requestParameters: BulkDeleteTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.bulkDeleteTasksRaw(requestParameters, initOverrides);
    }

    /**
     * Bulk upsert tasks
     */
    async bulkUpsertTasksRaw(requestParameters: BulkUpsertTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TaskModel>>> {
        if (requestParameters['bulkUpsertTasksModel'] == null) {
            throw new runtime.RequiredError(
                'bulkUpsertTasksModel',
                'Required parameter "bulkUpsertTasksModel" was null or undefined when calling bulkUpsertTasks().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/tasks/bulk-upsert`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BulkUpsertTasksModelToJSON(requestParameters['bulkUpsertTasksModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TaskModelFromJSON));
    }

    /**
     * Bulk upsert tasks
     */
    async bulkUpsertTasks(requestParameters: BulkUpsertTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TaskModel>> {
        const response = await this.bulkUpsertTasksRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get tasks
     */
    async getTasksRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TaskModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/tasks`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TaskModelFromJSON));
    }

    /**
     * Get tasks
     */
    async getTasks(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TaskModel>> {
        const response = await this.getTasksRaw(initOverrides);
        return await response.value();
    }

}
